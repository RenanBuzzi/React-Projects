[{"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\index.js":"1","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reportWebVitals.js":"2","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\App.js":"3","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\Dcandidates.js":"4","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\store.js":"5","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reducers\\index.js":"6","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reducers\\dCandidate.js":"7","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\dCandidate.js":"8","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\api.js":"9","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\DCandidateForm.js":"10","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\useForm.js":"11","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\index.js":"12","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\App.js":"13","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reportWebVitals.js":"14","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\store.js":"15","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\dCandidate.js":"16","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\DCandidateForm.js":"17","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reducers\\index.js":"18","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\api.js":"19","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\useForm.js":"20","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reducers\\dCandidate.js":"21","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\DataGridCandidates.js":"22","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\Login.js":"23","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\SignUpForm.js":"24","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\useSignUpForm.js":"25","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\validateInfo.js":"26"},{"size":500,"mtime":1612469389010,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":510,"mtime":1613234701501,"results":"30","hashOfConfig":"28"},{"size":4459,"mtime":1613235291538,"results":"31","hashOfConfig":"28"},{"size":250,"mtime":1612024933293,"results":"32","hashOfConfig":"28"},{"size":149,"mtime":1612025959657,"results":"33","hashOfConfig":"28"},{"size":922,"mtime":1613228254186,"results":"34","hashOfConfig":"28"},{"size":1588,"mtime":1613229202326,"results":"35","hashOfConfig":"28"},{"size":476,"mtime":1612465148926,"results":"36","hashOfConfig":"28"},{"size":7336,"mtime":1613234775293,"results":"37","hashOfConfig":"28"},{"size":809,"mtime":1613231090058,"results":"38","hashOfConfig":"28"},{"size":517,"mtime":1614436273757,"results":"39","hashOfConfig":"40"},{"size":702,"mtime":1617394307555,"results":"41","hashOfConfig":"40"},{"size":375,"mtime":1614436273767,"results":"42","hashOfConfig":"40"},{"size":219,"mtime":1617392341110,"results":"43","hashOfConfig":"40"},{"size":1634,"mtime":1616871089292,"results":"44","hashOfConfig":"40"},{"size":6635,"mtime":1618062416868,"results":"45","hashOfConfig":"40"},{"size":149,"mtime":1614436273764,"results":"46","hashOfConfig":"40"},{"size":476,"mtime":1614436273735,"results":"47","hashOfConfig":"40"},{"size":720,"mtime":1617392732838,"results":"48","hashOfConfig":"40"},{"size":924,"mtime":1616871110910,"results":"49","hashOfConfig":"40"},{"size":5081,"mtime":1617364638257,"results":"50","hashOfConfig":"40"},{"size":2090,"mtime":1617366979220,"results":"51","hashOfConfig":"40"},{"size":8904,"mtime":1618141367532,"results":"52","hashOfConfig":"40"},{"size":1163,"mtime":1618085242083,"results":"53","hashOfConfig":"40"},{"size":2097,"mtime":1618083949860,"results":"54","hashOfConfig":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"z1cifz",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"1tk1qxt",{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"83"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"83"},"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\index.js",[],["120","121"],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reportWebVitals.js",[],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\App.js",[],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\Dcandidates.js",["122","123","124"],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\store.js",[],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reducers\\index.js",[],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reducers\\dCandidate.js",["125","126"],"import { ACTION_TYPES } from \"../actions/dCandidate\";\r\nconst initialState = {\r\n    list: []\r\n}\r\n\r\n\r\nexport const dCandidate = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCHALL:\r\n            return {\r\n                ...state,\r\n                list: [...action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.CREATE:\r\n            return {\r\n                ...state,\r\n                list: [...state.list, action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.UPDATE:\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => x.id == action.payload.id ? action.payload : x)\r\n            }\r\n\r\n        case ACTION_TYPES.DELETE:\r\n            return {\r\n                ...state,\r\n                list: state.list.filter(x => x.id != action.payload)\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\dCandidate.js",[],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\api.js",["127"],"import axios from 'axios';\r\n\r\nconst baseUrl = \"https://localhost:44331/api/\"\r\n\r\n\r\nexport default {\r\n    dCandidate(url = baseUrl + 'DbCandidates/'){\r\n        return{\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url + id),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n            delete: id => axios.delete(url + id)\r\n\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\DCandidateForm.js",["128","129","130","131","132","133","134"],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\useForm.js",["135","136"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validade, setCurrentId) => {\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => { \r\n        const { name, value } = e.target\r\n        const fieldValue = { [name]: value}\r\n        setValues({\r\n            ...values,\r\n            ...fieldValue\r\n        })\r\n        validade(fieldValue)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues({\r\n            ...initialFieldValues\r\n        })\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues, \r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\nexport default useForm;","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\index.js",[],["137","138"],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\App.js",["139","140"],"import \"./App.css\";\r\nimport { store } from \"./actions/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport DataGridCandidates from \"./components/DataGridCandidates\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\nimport Login from \"./components/Login\";\r\nimport SignUpForm from \"./components/SignUpForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ToastProvider autoDismiss={true}>\r\n        <Container maxWidth=\"lg\">\r\n          <SignUpForm />\r\n          {/* <Login /> */}\r\n          {/* <DataGridCandidates /> */}\r\n        </Container>\r\n      </ToastProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reportWebVitals.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\store.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\dCandidate.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\DCandidateForm.js",["141","142","143","144","145","146"],"import clsx from \"clsx\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n  withStyles,\r\n  MenuItem,\r\n  FormControl,\r\n  Button,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/dCandidate\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\n\r\n/*Overwritening the TextBoxField, CSS spacing between the components*/\r\nconst styles = (theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      flexWrap: \"wrap\",\r\n      minWith: 230,\r\n    },\r\n    textField: {\r\n      width: \"30ch\",\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 210,\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1.5),\r\n    primary: {\r\n      main: purple[500],\r\n    },\r\n    secondary: {\r\n      main: \"#f44336\",\r\n    },\r\n  },\r\n});\r\n\r\nconst initialFieldValues = {\r\n  fullName: \"\",\r\n  mobile: \"\",\r\n  email: \"\",\r\n  age: \"\",\r\n  bloodGroup: \"\",\r\n  address: \"\",\r\n};\r\n\r\nconst DCandidatesForm = ({ classes, ...props }) => {\r\n  //toast msg.\r\n  const { addToast } = useToasts();\r\n\r\n  /*Validation Form, check the UseForm and this DCandidateForm.js*/\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if (\"fullName\" in fieldValues)\r\n      temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\r\n    if (\"mobile\" in fieldValues)\r\n      temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\";\r\n    if (\"bloodGroup\" in fieldValues)\r\n      temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\";\r\n    if (\"email\" in fieldValues)\r\n      temp.email = /^$|.+@.+..+/.test(fieldValues.email)\r\n        ? \"\"\r\n        : \"Email is not valid.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues == values) return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  } = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n  //material-ui select\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  React.useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  /*Submitting and Updating the form*/\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      const onSuccess = () => {\r\n        resetForm();\r\n        addToast(\"Submitted successfully\", { appearance: \"success\" });\r\n      };\r\n      if (props.currentId === 0) props.createDCandidate(values, onSuccess);\r\n      else props.updateDCandidate(props.currentId, values, onSuccess);\r\n    }\r\n\r\n    resetForm();\r\n  };\r\n\r\n  /*Populate form by ID*/\r\n  useEffect(() => {\r\n    if (props.currentId != 0) {\r\n      setValues({\r\n        ...props.dCandidateList.find((x) => x.id == props.currentId),\r\n      });\r\n      setErrors({});\r\n    }\r\n  }, [props.currentId]);\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={classes.root}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"fullName\"\r\n            variant=\"outlined\"\r\n            label=\"Full Name\"\r\n            value={values.fullName}\r\n            onChange={handleInputChange}\r\n            className={clsx(classes.margin, classes.textField)}\r\n            {...(errors.fullName && {\r\n              error: true,\r\n              helperText: errors.fullName,\r\n            })}\r\n          />\r\n          <TextField\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            label=\"Email\"\r\n            value={values.email}\r\n            id=\"outlined-start-adornment\"\r\n            onChange={handleInputChange}\r\n            {...(errors.email && { error: true, helperText: errors.email })}\r\n          />\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            className={classes.formControl}\r\n            {...(errors.bloodGroup && { error: true })}\r\n          >\r\n            <InputLabel ref={inputLabel}> Blood Group</InputLabel>\r\n            <Select\r\n              name=\"bloodGroup\"\r\n              value={values.bloodGroup}\r\n              onChange={handleInputChange}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value=\"\">Select Blood Group</MenuItem>\r\n              <MenuItem value=\"A+\">A +ve</MenuItem>\r\n              <MenuItem value=\"A-\">A -ve</MenuItem>\r\n              <MenuItem value=\"B+\">B +ve</MenuItem>\r\n              <MenuItem value=\"B-\">B -ve</MenuItem>\r\n              <MenuItem value=\"AB+\">AB +ve</MenuItem>\r\n              <MenuItem value=\"AB-\">AB -ve</MenuItem>\r\n              <MenuItem value=\"O+\">O +ve</MenuItem>\r\n              <MenuItem value=\"O-\">O -ve</MenuItem>\r\n            </Select>\r\n            {errors.bloodGroup && (\r\n              <FormHelperText>{errors.bloodGroup}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"mobile\"\r\n            variant=\"outlined\"\r\n            label=\"Mobile\"\r\n            value={values.mobile}\r\n            onChange={handleInputChange}\r\n            {...(errors.mobile && { error: true, helperText: errors.mobile })}\r\n          />\r\n          <TextField\r\n            name=\"age\"\r\n            variant=\"outlined\"\r\n            label=\"Age\"\r\n            value={values.age}\r\n            onChange={handleInputChange}\r\n          />\r\n          <TextField\r\n            name=\"address\"\r\n            variant=\"outlined\"\r\n            label=\"Address\"\r\n            value={values.address}\r\n            onChange={handleInputChange}\r\n          />\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.smMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.smMargin}\r\n              onClick={resetForm}\r\n              color=\"secondary\"\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dCandidateList: state.dCandidate.list,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  createDCandidate: actions.create,\r\n  updateDCandidate: actions.update,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(DCandidatesForm));\r\n","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reducers\\index.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\api.js",["147"],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\useForm.js",["148"],"import React, { useState } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validade, setCurrentId) => {\r\n  const [values, setValues] = useState(initialFieldValues);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const fieldValue = { [name]: value };\r\n    setValues({\r\n      ...values,\r\n      ...fieldValue,\r\n    });\r\n    validade(fieldValue);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues({\r\n      ...initialFieldValues,\r\n    });\r\n    setErrors({});\r\n    setCurrentId(0);\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm,\r\n  };\r\n};\r\nexport default useForm;\r\n","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reducers\\dCandidate.js",[],["149","150"],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\DataGridCandidates.js",["151","152","153","154","155"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/dCandidate\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport DCandidateForm from \"./DCandidateForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nconst style = (theme) => ({\r\n  /*overwriting the existing CSS*/\r\n  root: {\r\n    \"& .MuiTableCell-head\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst DataGridCandidates = ({ classes, ...props }) => {\r\n  //toast msg.\r\n  const { addToast } = useToasts();\r\n\r\n  /*Getting the row on the Grid Component*/\r\n  const [currentId, setCurrentId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.fetchAllDCandidates();\r\n  }, ([] = useState(0)));\r\n\r\n  /*Delete record by ID*/\r\n  const onDelete = (id) => {\r\n    if (window.confirm(\"Are you sure to delete this message?\"))\r\n      props.deleteDCandidate(id, () =>\r\n        addToast(\"Deleted successfully\", { appearance: \"info\" })\r\n      );\r\n  };\r\n\r\n  /*Paginator Material UI*/\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [rows, setRows] = useState(0);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  /*count rows from datatable*/\r\n  const numRows = props.dCandidateList.filter((rows) => rows).length;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, numRows - page * rowsPerPage);\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={3}>\r\n      <Grid container>\r\n        <Grid item xl={12}>\r\n          <DCandidateForm {...{ currentId, setCurrentId }}></DCandidateForm>\r\n        </Grid>\r\n      </Grid>\r\n      <Paper className={classes.paper} elevation={10}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead className={classes.root}>\r\n                  <TableRow>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Mobile</TableCell>\r\n                    <TableCell>Blood Group</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.dCandidateList\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((record, index) => {\r\n                      return (\r\n                        <TableRow Key={index} hover>\r\n                          <TableCell>{record.fullName}</TableCell>\r\n                          <TableCell>{record.mobile}</TableCell>\r\n                          <TableCell>{record.bloodGroup}</TableCell>\r\n                          <TableCell>\r\n                            <ButtonGroup variant=\"text\">\r\n                              <Button>\r\n                                <EditIcon\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    setCurrentId(record.id);\r\n                                  }}\r\n                                />\r\n                              </Button>\r\n                              <Button>\r\n                                <DeleteIcon\r\n                                  color=\"secondary\"\r\n                                  onClick={() => onDelete(record.id)}\r\n                                />\r\n                              </Button>\r\n                            </ButtonGroup>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                component=\"div\"\r\n                count={numRows}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                rowsPerPage={rowsPerPage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dCandidateList: state.dCandidate.list,\r\n});\r\nconst mapActionToProps = {\r\n  fetchAllDCandidates: actions.fetchAll,\r\n  deleteDCandidate: actions.Delete,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(style)(DataGridCandidates));\r\n","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\Login.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\SignUpForm.js",["156","157","158","159","160","161","162","163","164"],"import clsx from \"clsx\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  withStyles,\r\n  Typography,\r\n  TextField,\r\n  Checkbox,\r\n  Button,\r\n  MenuItem,\r\n  InputLabel,\r\n  Select,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport useSignUpForm from \"./useSignUpForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/dCandidate\";\r\n\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport validate from \"./validateInfo\";\r\n\r\nconst initialFieldValues = {\r\n  fullName: \"\",\r\n  mobile: \"\",\r\n  email: \"\",\r\n  age: \"\",\r\n  bloodGroup: \"\",\r\n  address: \"\",\r\n};\r\n\r\nconst StyleDropdownlist = {\r\n  margin: \"20px auto\",\r\n  minWidth: 210,\r\n};\r\n\r\nconst paperStyle = {\r\n  padding: \"30px 20px\",\r\n  width: 300,\r\n  margin: \"20px auto\",\r\n};\r\n\r\nconst headerStyle = { margin: 0 };\r\nconst avatarStyle = {\r\n  backgroundColor: \"#1bbd7e\",\r\n};\r\n\r\nconst styleRadio = {\r\n  display: \"initial\",\r\n};\r\n\r\nconst formStyleRadio = {\r\n  marginTop: 20,\r\n};\r\n\r\nconst btnStyle = {\r\n  padding: \"10px 20px\",\r\n  width: 300,\r\n  margin: \"8px auto\",\r\n};\r\n\r\nconst SignUpForm = ({ classes, ...props }) => {\r\n  //toast msg.\r\n  const { addToast } = useToasts();\r\n\r\n  const {\r\n    handleChange,\r\n    values,\r\n    //handleSubmit,\r\n    // errors,\r\n    handleCheckBox,\r\n    resetForm,\r\n  } = useSignUpForm(validate);\r\n\r\n  // Getting Gender Value\r\n  const [value, setValue] = useState(\"female\");\r\n  const handleGenderChange = (event) => {\r\n    setValue(event.target.value);\r\n    values.gender = event.target.value;\r\n  };\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (setErrors(validate(values))) {\r\n      const onSuccess = () => {\r\n        resetForm();\r\n        addToast(\"Submitted successfully\", { appearance: \"success\" });\r\n      };\r\n      alert(\"Submitted\");\r\n      props.createDCandidate(values, onSuccess);\r\n    }\r\n  };\r\n\r\n  // const handleSubmit = (e) => {\r\n  // if (validate) {\r\n  //   const onSuccess = () => {\r\n  //     resetForm();\r\n  //     addToast(\"Submitted successfully\", { appearance: \"success\" });\r\n  //   };\r\n  //   //props.createDCandidate(values, onSuccess);\r\n  // }\r\n  // };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      onSubmit={handleSubmit}\r\n      onReset={resetForm}\r\n    >\r\n      <Grid container>\r\n        <Paper elevation={20} style={paperStyle}>\r\n          <Grid align=\"center\">\r\n            <Avatar style={avatarStyle}>\r\n              <AddCircleOutlineIcon />\r\n            </Avatar>\r\n            <h2 style={headerStyle}>Sign Up</h2>\r\n            <Typography variant=\"caption\">\r\n              Please fill this form to create an account !\r\n            </Typography>\r\n          </Grid>\r\n          <TextField\r\n            name=\"fullName\"\r\n            fullWidth\r\n            label=\"Full name\"\r\n            placeholder=\"Enter with your full name.\"\r\n            value={values.fullName}\r\n            onChange={handleChange}\r\n            {...(errors.fullName && {\r\n              error: true,\r\n              helperText: errors.fullName,\r\n            })}\r\n          />\r\n          <TextField\r\n            name=\"email\"\r\n            fullWidth\r\n            label=\"Email\"\r\n            placeholder=\"Enter with your email.\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            {...(errors.email && {\r\n              error: true,\r\n              helperText: errors.email,\r\n            })}\r\n          />\r\n          <TextField\r\n            name=\"mobile\"\r\n            fullWidth\r\n            label=\"Enter with your mobile number.\"\r\n            placeholder=\"(00) 912345678\"\r\n            value={values.mobile}\r\n            onChange={handleChange}\r\n            {...(errors.mobile && {\r\n              error: true,\r\n              helperText: errors.mobile,\r\n            })}\r\n          />\r\n          <TextField\r\n            name=\"age\"\r\n            fullWidth\r\n            label=\"Age\"\r\n            placeholder=\"Enter with your age.\"\r\n            value={values.age != \"\" ? values.age : \"\"}\r\n            onChange={handleChange}\r\n            {...(errors.age && {\r\n              error: true,\r\n              helperText: errors.age,\r\n            })}\r\n          />\r\n          <FormControl fullWidth style={StyleDropdownlist}>\r\n            <InputLabel placeholder=\"Enter with you blood group.\">\r\n              Blood Group\r\n            </InputLabel>\r\n            <Select\r\n              name=\"bloodGroup\"\r\n              value={values.bloodGroup}\r\n              onChange={handleChange}\r\n              {...(errors.bloodGroup && {\r\n                error: true,\r\n                helperText: errors.bloodGroup,\r\n              })}\r\n            >\r\n              <MenuItem value=\"\">Select Blood Group</MenuItem>\r\n              <MenuItem value=\"A+\">A+</MenuItem>\r\n              <MenuItem value=\"A-\">A-</MenuItem>\r\n              <MenuItem value=\"B+\">B+</MenuItem>\r\n              <MenuItem value=\"B-\">B-</MenuItem>\r\n              <MenuItem value=\"AB+\">AB+</MenuItem>\r\n              <MenuItem value=\"AB-\">AB-</MenuItem>\r\n              <MenuItem value=\"O+\">O+</MenuItem>\r\n              <MenuItem value=\"O-\">O-</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            name=\"address\"\r\n            placeholder=\"Enter with your address!\"\r\n            fullWidth\r\n            label=\"Address\"\r\n            value={values.address}\r\n            onChange={handleChange}\r\n            {...(errors.address && {\r\n              error: true,\r\n              helperText: errors.address,\r\n            })}\r\n          />\r\n          <FormControl component=\"fieldset\" style={StyleDropdownlist}>\r\n            <FormLabel component=\"legend\">Gender</FormLabel>\r\n            <RadioGroup\r\n              style={styleRadio}\r\n              aria-label=\"gender\"\r\n              name=\"gender\"\r\n              // value={value}\r\n              // onChange={handleGenderChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"female\"\r\n                control={<Radio />}\r\n                label=\"Female\"\r\n              />\r\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n              <FormControlLabel\r\n                value=\"other\"\r\n                control={<Radio />}\r\n                label=\"Other\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <TextField\r\n            name=\"password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            label=\"Password\"\r\n            placeholder=\"Enter with your password!\"\r\n            // value={values.password}\r\n            //onChange={handleChange}\r\n            {...(errors.password && {\r\n              error: true,\r\n              helperText: errors.password,\r\n            })}\r\n          />\r\n          <TextField\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            fullWidth\r\n            label=\"Confirm Password\"\r\n            placeholder=\"Confirm your password!\"\r\n            // value={values.confirmPassword}\r\n            // onChange={handleChange}\r\n            {...(errors.confirmPassword && {\r\n              error: true,\r\n              helperText: errors.confirmPassword,\r\n            })}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                defaultChecked={values.checked}\r\n                // checked={values.checked}\r\n                // onChange={handleCheckBox}\r\n                name=\"acceptTerms\"\r\n              />\r\n            }\r\n            label=\"I accept the terms and condictions\"\r\n          />\r\n          <FormHelperText\r\n            {...(errors.acceptTerms && {\r\n              error: true,\r\n              helperText: errors.acceptTerms,\r\n            })}\r\n          >\r\n            {errors.acceptTerms}\r\n          </FormHelperText>\r\n\r\n          <Button\r\n            style={btnStyle}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            type=\"reset\"\r\n            style={btnStyle}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onChange={handleChange}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dCandidateList: state.dCandidate.list,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  createDCandidate: actions.create,\r\n  updateDCandidate: actions.update,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(SignUpForm);\r\n","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\useSignUpForm.js",["165","166","167","168","169"],"import { SettingsInputAntennaTwoTone } from \"@material-ui/icons\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst useSignUpForm = (validate) => {\r\n  const [values, setValues] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    age: \"\",\r\n    bloodGroup: \"\",\r\n    address: \"\",\r\n    // gender: \"\",\r\n    // password: \"\",\r\n    // confirmPassword: \"\",\r\n    // acceptTerms: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const [checked, setChecked] = useState();\r\n  const handleCheckBox = (event) => {\r\n    setChecked(event.target.checked);\r\n    values.acceptTerms = event.target.checked;\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues({});\r\n    window.location.reload();\r\n  };\r\n\r\n  // const [errors, setErrors] = useState({});\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   setErrors(validate(values));\r\n  // };\r\n\r\n  return {\r\n    handleChange,\r\n    values,\r\n    validate,\r\n    //handleSubmit,\r\n    //errors,\r\n    // handleCheckBox,\r\n    resetForm,\r\n  };\r\n};\r\nexport default useSignUpForm;\r\n","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\validateInfo.js",["170","171","172","173"],"import { AirlineSeatLegroomReducedTwoTone } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport useSignUpForm from \"./useSignUpForm\";\r\n\r\nconst validateInfo = (values) => {\r\n  let errors = {};\r\n\r\n  //Full Name Validation\r\n  if (!values.fullName.trim()) {\r\n    errors.fullName = values.fullName ? \"\" : \"The Full Name is requeried!\";\r\n  }\r\n\r\n  //*Email Validation\r\n  if (!values.email.trim()) {\r\n    errors.email = \"Email Requeried\";\r\n  } else if (!/^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[A-Za-z]+$/.test(values.email)) {\r\n    errors.email = \"Email Address is invalid!\";\r\n  }\r\n\r\n  // Mobile number Validation\r\n  if (!values.mobile.trim()) {\r\n    errors.mobile = \"Mobile number is requeried!\";\r\n  } else if (\r\n    !/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/.test(values.mobile)\r\n  ) {\r\n    errors.mobile = \"Mobile number is invalid!\";\r\n  }\r\n\r\n  // Age Validation\r\n  if (!values.age.trim()) {\r\n    errors.age = \"Age is requeried!\";\r\n  } else if (!/^[0-9\\b]+$/.test(values.age)) {\r\n    errors.age = \"Age is invalid!\";\r\n  }\r\n\r\n  // Blood Group\r\n  if (!values.bloodGroup.trim()) {\r\n    errors.bloodGroup = \"Bllod Group is requeried!\";\r\n  } else if (!/^[0-9\\b]+$/.test(values.bloodGroup)) {\r\n    errors.bloodGroup = \"Blood Group is invalid!\";\r\n  }\r\n\r\n  //Address Validation\r\n  if (!values.address.trim()) {\r\n    errors.address = values.address ? \"\" : \"The Address is requeried!\";\r\n  }\r\n\r\n  // if (!values.password.trim()) {\r\n  //   errors.password = \"Password is requerid\";\r\n  // } else if (values.password.length < 6) {\r\n  //   errors.password = \"Password needs to be 6 chacaters or more\";\r\n  // }\r\n\r\n  // if (!values.confirmPassword) {\r\n  //   errors.confirmPassword = \"Password is required\";\r\n  // }\r\n  // if (values.confirmPassword !== values.password) {\r\n  //   errors.confirmPassword = \"Password do not match!\";\r\n  // } else {\r\n  //   errors.confirmPassword = \"\";\r\n  // }\r\n\r\n  // alert(values.acceptTerms);\r\n  // if (!values.acceptTerms.trim()) {\r\n  //   errors.acceptTerms = values.acceptTerms ? \"\" : \"The Address is requeried!\";\r\n  // }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validateInfo;\r\n",{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":35,"column":8,"nodeType":"180","endLine":35,"endColumn":24},{"ruleId":"178","severity":1,"message":"181","line":35,"column":8,"nodeType":"180","endLine":35,"endColumn":24,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":35,"column":8,"nodeType":"185","messageId":"186","endLine":35,"endColumn":10},{"ruleId":"187","severity":1,"message":"188","line":25,"column":48,"nodeType":"189","messageId":"186","endLine":25,"endColumn":50},{"ruleId":"187","severity":1,"message":"190","line":31,"column":51,"nodeType":"189","messageId":"186","endLine":31,"endColumn":53},{"ruleId":"191","severity":1,"message":"192","line":6,"column":1,"nodeType":"193","endLine":17,"endColumn":2},{"ruleId":"194","severity":1,"message":"195","line":2,"column":17,"nodeType":"196","messageId":"197","endLine":2,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":56,"column":25,"nodeType":"189","messageId":"186","endLine":56,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":57,"column":53,"nodeType":"189","messageId":"186","endLine":57,"endColumn":55},{"ruleId":"187","severity":1,"message":"188","line":86,"column":32,"nodeType":"189","messageId":"186","endLine":86,"endColumn":34},{"ruleId":"187","severity":1,"message":"190","line":97,"column":25,"nodeType":"189","messageId":"186","endLine":97,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":99,"column":52,"nodeType":"189","messageId":"186","endLine":99,"endColumn":54},{"ruleId":"178","severity":1,"message":"198","line":103,"column":4,"nodeType":"199","endLine":103,"endColumn":21,"suggestions":"200"},{"ruleId":"194","severity":1,"message":"201","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"202","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"174","replacedBy":"203"},{"ruleId":"176","replacedBy":"204"},{"ruleId":"194","severity":1,"message":"205","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":26},{"ruleId":"194","severity":1,"message":"206","line":7,"column":8,"nodeType":"196","messageId":"197","endLine":7,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":13,"column":17,"nodeType":"196","messageId":"197","endLine":13,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":77,"column":21,"nodeType":"189","messageId":"186","endLine":77,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":77,"column":74,"nodeType":"189","messageId":"186","endLine":77,"endColumn":76},{"ruleId":"187","severity":1,"message":"190","line":113,"column":25,"nodeType":"189","messageId":"186","endLine":113,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":115,"column":50,"nodeType":"189","messageId":"186","endLine":115,"endColumn":52},{"ruleId":"178","severity":1,"message":"198","line":119,"column":6,"nodeType":"199","endLine":119,"endColumn":23,"suggestions":"207"},{"ruleId":"191","severity":1,"message":"192","line":6,"column":1,"nodeType":"193","endLine":17,"endColumn":2},{"ruleId":"194","severity":1,"message":"201","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"174","replacedBy":"208"},{"ruleId":"176","replacedBy":"209"},{"ruleId":"178","severity":1,"message":"179","line":45,"column":7,"nodeType":"180","endLine":45,"endColumn":23},{"ruleId":"178","severity":1,"message":"181","line":45,"column":7,"nodeType":"180","endLine":45,"endColumn":23,"suggestions":"210"},{"ruleId":"183","severity":1,"message":"184","line":45,"column":7,"nodeType":"185","messageId":"186","endLine":45,"endColumn":9},{"ruleId":"194","severity":1,"message":"211","line":58,"column":10,"nodeType":"196","messageId":"197","endLine":58,"endColumn":14},{"ruleId":"194","severity":1,"message":"212","line":58,"column":16,"nodeType":"196","messageId":"197","endLine":58,"endColumn":23},{"ruleId":"194","severity":1,"message":"213","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":12},{"ruleId":"194","severity":1,"message":"214","line":6,"column":3,"nodeType":"196","messageId":"197","endLine":6,"endColumn":13},{"ruleId":"194","severity":1,"message":"202","line":16,"column":27,"nodeType":"196","messageId":"197","endLine":16,"endColumn":36},{"ruleId":"194","severity":1,"message":"215","line":30,"column":7,"nodeType":"196","messageId":"197","endLine":30,"endColumn":25},{"ruleId":"194","severity":1,"message":"216","line":59,"column":7,"nodeType":"196","messageId":"197","endLine":59,"endColumn":21},{"ruleId":"194","severity":1,"message":"217","line":78,"column":5,"nodeType":"196","messageId":"197","endLine":78,"endColumn":19},{"ruleId":"194","severity":1,"message":"218","line":83,"column":10,"nodeType":"196","messageId":"197","endLine":83,"endColumn":15},{"ruleId":"194","severity":1,"message":"219","line":84,"column":9,"nodeType":"196","messageId":"197","endLine":84,"endColumn":27},{"ruleId":"187","severity":1,"message":"190","line":171,"column":31,"nodeType":"189","messageId":"186","endLine":171,"endColumn":33},{"ruleId":"194","severity":1,"message":"220","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":37},{"ruleId":"194","severity":1,"message":"202","line":2,"column":20,"nodeType":"196","messageId":"197","endLine":2,"endColumn":29},{"ruleId":"194","severity":1,"message":"221","line":19,"column":26,"nodeType":"196","messageId":"197","endLine":19,"endColumn":30},{"ruleId":"194","severity":1,"message":"222","line":26,"column":10,"nodeType":"196","messageId":"197","endLine":26,"endColumn":17},{"ruleId":"194","severity":1,"message":"217","line":27,"column":9,"nodeType":"196","messageId":"197","endLine":27,"endColumn":23},{"ruleId":"194","severity":1,"message":"223","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":42},{"ruleId":"194","severity":1,"message":"201","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":13},{"ruleId":"194","severity":1,"message":"224","line":3,"column":8,"nodeType":"196","messageId":"197","endLine":3,"endColumn":21},{"ruleId":"225","severity":1,"message":"226","line":24,"column":42,"nodeType":"227","messageId":"228","endLine":24,"endColumn":43,"suggestions":"229"},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","AssignmentExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["232"],"no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'props.dCandidateList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.","ArrayExpression",["233"],"'React' is defined but never used.","'useEffect' is defined but never used.",["230"],["231"],"'DataGridCandidates' is defined but never used.","'Login' is defined but never used.",["234"],["230"],["231"],["235"],"'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'clsx' is defined but never used.","'withStyles' is defined but never used.","'initialFieldValues' is assigned a value but never used.","'formStyleRadio' is assigned a value but never used.","'handleCheckBox' is assigned a value but never used.","'value' is assigned a value but never used.","'handleGenderChange' is assigned a value but never used.","'SettingsInputAntennaTwoTone' is defined but never used.","'type' is assigned a value but never used.","'checked' is assigned a value but never used.","'AirlineSeatLegroomReducedTwoTone' is defined but never used.","'useSignUpForm' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["236","237"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"240","fix":"242"},{"desc":"238","fix":"243"},{"messageId":"244","fix":"245","desc":"246"},{"messageId":"247","fix":"248","desc":"249"},"Update the dependencies array to be: [props]",{"range":"250","text":"251"},"Update the dependencies array to be: [props.currentId, props.dCandidateList, setErrors, setValues]",{"range":"252","text":"253"},{"range":"254","text":"253"},{"range":"255","text":"251"},"removeEscape",{"range":"256","text":"257"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"258","text":"259"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1037,1053],"[props]",[2962,2979],"[props.currentId, props.dCandidateList, setErrors, setValues]",[3049,3066],[1109,1125],[747,748],"",[747,747],"\\"]