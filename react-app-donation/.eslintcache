[{"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\index.js":"1","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reportWebVitals.js":"2","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\App.js":"3","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\Dcandidates.js":"4","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\store.js":"5","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reducers\\index.js":"6","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reducers\\dCandidate.js":"7","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\dCandidate.js":"8","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\api.js":"9","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\DCandidateForm.js":"10","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\useForm.js":"11","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\index.js":"12","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\App.js":"13","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reportWebVitals.js":"14","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\store.js":"15","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\dCandidate.js":"16","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\DCandidateForm.js":"17","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reducers\\index.js":"18","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\api.js":"19","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\useForm.js":"20","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reducers\\dCandidate.js":"21","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\DataGridCandidates.js":"22"},{"size":500,"mtime":1612469389010,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":510,"mtime":1613234701501,"results":"26","hashOfConfig":"24"},{"size":4459,"mtime":1613235291538,"results":"27","hashOfConfig":"24"},{"size":250,"mtime":1612024933293,"results":"28","hashOfConfig":"24"},{"size":149,"mtime":1612025959657,"results":"29","hashOfConfig":"24"},{"size":922,"mtime":1613228254186,"results":"30","hashOfConfig":"24"},{"size":1588,"mtime":1613229202326,"results":"31","hashOfConfig":"24"},{"size":476,"mtime":1612465148926,"results":"32","hashOfConfig":"24"},{"size":7336,"mtime":1613234775293,"results":"33","hashOfConfig":"24"},{"size":809,"mtime":1613231090058,"results":"34","hashOfConfig":"24"},{"size":517,"mtime":1614436273757,"results":"35","hashOfConfig":"36"},{"size":552,"mtime":1616871586207,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1614436273767,"results":"38","hashOfConfig":"36"},{"size":250,"mtime":1614436273741,"results":"39","hashOfConfig":"36"},{"size":1634,"mtime":1616871089292,"results":"40","hashOfConfig":"36"},{"size":7844,"mtime":1616876507780,"results":"41","hashOfConfig":"36"},{"size":149,"mtime":1614436273764,"results":"42","hashOfConfig":"36"},{"size":476,"mtime":1614436273735,"results":"43","hashOfConfig":"36"},{"size":798,"mtime":1616871208813,"results":"44","hashOfConfig":"36"},{"size":924,"mtime":1616871110910,"results":"45","hashOfConfig":"36"},{"size":5874,"mtime":1616961667919,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"z1cifz",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1tk1qxt",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\index.js",[],["98","99"],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reportWebVitals.js",[],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\App.js",[],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\Dcandidates.js",["100","101","102"],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\store.js",[],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reducers\\index.js",[],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\reducers\\dCandidate.js",["103","104"],"import { ACTION_TYPES } from \"../actions/dCandidate\";\r\nconst initialState = {\r\n    list: []\r\n}\r\n\r\n\r\nexport const dCandidate = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCHALL:\r\n            return {\r\n                ...state,\r\n                list: [...action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.CREATE:\r\n            return {\r\n                ...state,\r\n                list: [...state.list, action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.UPDATE:\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => x.id == action.payload.id ? action.payload : x)\r\n            }\r\n\r\n        case ACTION_TYPES.DELETE:\r\n            return {\r\n                ...state,\r\n                list: state.list.filter(x => x.id != action.payload)\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\dCandidate.js",[],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\actions\\api.js",["105"],"import axios from 'axios';\r\n\r\nconst baseUrl = \"https://localhost:44331/api/\"\r\n\r\n\r\nexport default {\r\n    dCandidate(url = baseUrl + 'DbCandidates/'){\r\n        return{\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url + id),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n            delete: id => axios.delete(url + id)\r\n\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\DCandidateForm.js",["106","107","108","109","110","111","112"],"C:\\Users\\Renan Buzzi\\Documents\\GitHub\\Projects\\ReactFormUsingAPI.Net\\WebAPI\\react-app-donation\\src\\components\\useForm.js",["113","114"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validade, setCurrentId) => {\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => { \r\n        const { name, value } = e.target\r\n        const fieldValue = { [name]: value}\r\n        setValues({\r\n            ...values,\r\n            ...fieldValue\r\n        })\r\n        validade(fieldValue)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues({\r\n            ...initialFieldValues\r\n        })\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues, \r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\nexport default useForm;","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\index.js",[],["115","116"],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\App.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reportWebVitals.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\store.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\dCandidate.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\DCandidateForm.js",["117","118","119","120","121","122","123"],"import clsx from 'clsx';\r\nimport { Grid, InputLabel, Select, TextField, withStyles, MenuItem, FormControl, Button, FormHelperText } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/dCandidate\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\n\r\n\r\n/*Overwritening the TextBoxField, CSS spacing between the components*/\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n          margin: theme.spacing(1),\r\n          flexWrap: 'wrap',\r\n          minWith:230\r\n        },\r\n        textField: {\r\n            width: '30ch',\r\n          },\r\n      },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 210,\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1.5),\r\n        primary: {\r\n            main: purple[500],\r\n          },\r\n          secondary: {\r\n            main: '#f44336',\r\n          },\r\n\r\n    }\r\n})\r\n\r\n\r\nconst initialFieldValues = {\r\n    fullName: '',\r\n    mobile: '',\r\n    email: '',\r\n    age: '',\r\n    bloodGroup: '',\r\n    address: ''\r\n}\r\n\r\nconst DCandidatesForm = ({classes, ...props}) => {\r\n\r\n     //toast msg.\r\n    const { addToast } = useToasts()\r\n\r\n    /*Validation Form, check the UseForm and this DCandidateForm.js*/\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile ? \"\" : \"This field is required.\"\r\n        if ('bloodGroup' in fieldValues)\r\n            temp.bloodGroup = fieldValues.bloodGroup ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/^$|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values, \r\n        setValues,\r\n        errors, \r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n      } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n //material-ui select\r\n const inputLabel = React.useRef(null);\r\n const [labelWidth, setLabelWidth] = React.useState(0);\r\n   React.useEffect(() => {\r\n       setLabelWidth(inputLabel.current.offsetWidth);\r\n   }, []);    \r\n\r\n\r\n   /*Submitting and Updating the form*/\r\n   const handleSubmit = e => {\r\n       e.preventDefault()\r\n       if(validate())\r\n       {\r\n        const onSuccess = () => {\r\n            resetForm()\r\n            addToast(\"Submitted successfully\", { appearance: 'success' })\r\n        }\r\n           if (props.currentId == 0)\r\n           props.createDCandidate(values, onSuccess)\r\n           else\r\n           props.updateDCandidate(props.currentId,values, onSuccess)\r\n       }\r\n\r\n       resetForm()\r\n   }\r\n\r\n   /*Populate form by ID*/\r\n   useEffect(() => {\r\n    if (props.currentId != 0) {\r\n        setValues({\r\n            ...props.dCandidateList.find(x => x.id == props.currentId)\r\n        })\r\n        setErrors({})\r\n    }\r\n}, [props.currentId])\r\n\r\n\r\n\r\n\r\n    return(\r\n        <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        name=\"fullName\"\r\n                        variant=\"outlined\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        className={clsx(classes.margin, classes.textField)}\r\n                        {...(errors.fullName && { error: true, helperText: errors.fullName })}                   \r\n                    />\r\n                     <TextField\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        label=\"Email\"\r\n                        value={values.email}\r\n                        id=\"outlined-start-adornment\"\r\n                        onChange={handleInputChange}\r\n                        {...(errors.email && { error: true, helperText: errors.email })}                   \r\n                    />\r\n                      <FormControl variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        {...(errors.bloodGroup && { error: true })}\r\n                      >\r\n\r\n                        <InputLabel ref={inputLabel}> Blood Group</InputLabel>\r\n                        <Select\r\n                            name=\"bloodGroup\"\r\n                            value = {values.bloodGroup}\r\n                            onChange={handleInputChange}\r\n                            labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Select Blood Group</MenuItem>\r\n                            <MenuItem value=\"A+\">A +ve</MenuItem>\r\n                            <MenuItem value=\"A-\">A -ve</MenuItem>\r\n                            <MenuItem value=\"B+\">B +ve</MenuItem>\r\n                            <MenuItem value=\"B-\">B -ve</MenuItem>\r\n                            <MenuItem value=\"AB+\">AB +ve</MenuItem>\r\n                            <MenuItem value=\"AB-\">AB -ve</MenuItem>\r\n                            <MenuItem value=\"O+\">O +ve</MenuItem>\r\n                            <MenuItem value=\"O-\">O -ve</MenuItem>\r\n\r\n                        </Select>\r\n                        {errors.bloodGroup && <FormHelperText>{errors.bloodGroup}</FormHelperText>}\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                        name=\"mobile\"\r\n                        variant=\"outlined\"\r\n                        label=\"Mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        {...(errors.mobile && { error: true, helperText: errors.mobile })}                   \r\n                    />\r\n                    <TextField\r\n                        name=\"age\"\r\n                        variant=\"outlined\"\r\n                        label=\"Age\"\r\n                        value={values.age}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <TextField\r\n                        name=\"address\"\r\n                        variant=\"outlined\"\r\n                        label=\"Address\"\r\n                        value={values.address}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                  <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            className={classes.smMargin}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className={classes.smMargin}\r\n                            onClick={resetForm}\r\n                            color=\"secondary\"\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dCandidateList: state.dCandidate.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    createDCandidate: actions.create,\r\n    updateDCandidate: actions.update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(DCandidatesForm));","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reducers\\index.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\actions\\api.js",["124"],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\useForm.js",["125"],"import React, { useState } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validade, setCurrentId) => {\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => { \r\n        const { name, value } = e.target\r\n        const fieldValue = { [name]: value}\r\n        setValues({\r\n            ...values,\r\n            ...fieldValue\r\n        })\r\n        validade(fieldValue)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues({\r\n            ...initialFieldValues\r\n        })\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues, \r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\nexport default useForm;","C:\\GitProjects\\React-Apps\\react-app-donation\\src\\reducers\\dCandidate.js",[],"C:\\GitProjects\\React-Apps\\react-app-donation\\src\\components\\DataGridCandidates.js",["126","127","128","129","130","131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":35,"column":8,"nodeType":"139","endLine":35,"endColumn":24},{"ruleId":"137","severity":1,"message":"140","line":35,"column":8,"nodeType":"139","endLine":35,"endColumn":24,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":35,"column":8,"nodeType":"144","messageId":"145","endLine":35,"endColumn":10},{"ruleId":"146","severity":1,"message":"147","line":25,"column":48,"nodeType":"148","messageId":"145","endLine":25,"endColumn":50},{"ruleId":"146","severity":1,"message":"149","line":31,"column":51,"nodeType":"148","messageId":"145","endLine":31,"endColumn":53},{"ruleId":"150","severity":1,"message":"151","line":6,"column":1,"nodeType":"152","endLine":17,"endColumn":2},{"ruleId":"153","severity":1,"message":"154","line":2,"column":17,"nodeType":"155","messageId":"156","endLine":2,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":56,"column":25,"nodeType":"148","messageId":"145","endLine":56,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":57,"column":53,"nodeType":"148","messageId":"145","endLine":57,"endColumn":55},{"ruleId":"146","severity":1,"message":"147","line":86,"column":32,"nodeType":"148","messageId":"145","endLine":86,"endColumn":34},{"ruleId":"146","severity":1,"message":"149","line":97,"column":25,"nodeType":"148","messageId":"145","endLine":97,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":99,"column":52,"nodeType":"148","messageId":"145","endLine":99,"endColumn":54},{"ruleId":"137","severity":1,"message":"157","line":103,"column":4,"nodeType":"158","endLine":103,"endColumn":21,"suggestions":"159"},{"ruleId":"153","severity":1,"message":"160","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"153","severity":1,"message":"161","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"133","replacedBy":"162"},{"ruleId":"135","replacedBy":"163"},{"ruleId":"153","severity":1,"message":"154","line":3,"column":17,"nodeType":"155","messageId":"156","endLine":3,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":69,"column":25,"nodeType":"148","messageId":"145","endLine":69,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":70,"column":53,"nodeType":"148","messageId":"145","endLine":70,"endColumn":55},{"ruleId":"146","severity":1,"message":"147","line":99,"column":32,"nodeType":"148","messageId":"145","endLine":99,"endColumn":34},{"ruleId":"146","severity":1,"message":"149","line":110,"column":25,"nodeType":"148","messageId":"145","endLine":110,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":112,"column":52,"nodeType":"148","messageId":"145","endLine":112,"endColumn":54},{"ruleId":"137","severity":1,"message":"157","line":116,"column":4,"nodeType":"158","endLine":116,"endColumn":21,"suggestions":"164"},{"ruleId":"150","severity":1,"message":"151","line":6,"column":1,"nodeType":"152","endLine":17,"endColumn":2},{"ruleId":"153","severity":1,"message":"160","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":35,"column":8,"nodeType":"139","endLine":35,"endColumn":24},{"ruleId":"137","severity":1,"message":"140","line":35,"column":8,"nodeType":"139","endLine":35,"endColumn":24,"suggestions":"165"},{"ruleId":"142","severity":1,"message":"143","line":35,"column":8,"nodeType":"144","messageId":"145","endLine":35,"endColumn":10},{"ruleId":"153","severity":1,"message":"166","line":46,"column":12,"nodeType":"155","messageId":"156","endLine":46,"endColumn":16},{"ruleId":"153","severity":1,"message":"167","line":46,"column":18,"nodeType":"155","messageId":"156","endLine":46,"endColumn":25},{"ruleId":"153","severity":1,"message":"168","line":57,"column":11,"nodeType":"155","messageId":"156","endLine":57,"endColumn":18},{"ruleId":"153","severity":1,"message":"169","line":58,"column":13,"nodeType":"155","messageId":"156","endLine":58,"endColumn":22},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","AssignmentExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["172"],"no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'props.dCandidateList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.","ArrayExpression",["173"],"'React' is defined but never used.","'useEffect' is defined but never used.",["170"],["171"],["174"],["175"],"'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'counter' is assigned a value but never used.","'countRows' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"178","fix":"180"},{"desc":"176","fix":"181"},"Update the dependencies array to be: [props]",{"range":"182","text":"183"},"Update the dependencies array to be: [props.currentId, props.dCandidateList, setErrors, setValues]",{"range":"184","text":"185"},{"range":"186","text":"185"},{"range":"187","text":"183"},[1037,1053],"[props]",[2962,2979],"[props.currentId, props.dCandidateList, setErrors, setValues]",[3283,3300],[1108,1124]]